use std::str::FromStr;
use crate::modules::utils::display::*;

pub fn test_data(data: Option<Vec<u128>>) {
    let mut pals: Vec<u128>;
    if data.is_none() {
        let pals_str = "0,1,2,11,101,111,1001,2201,10001,10101,11011,100001,101101,110011,1000001,1001001,1100011,10000001,10011001,10100101,11000011,100000001,100010001,100101001,101000101,110000011,1000000001,1000110001,1010000101,1100000011,10000000001,10000100001,10001010001,10010001001,10100000101,11000000011,100000000001,100001100001,100010010001,100100001001,101000000101,110000000011,1000000000001,1000001000001,1000010100001,1001000001001,1010000000101,1100000000011,10000000000001,10000011000001,10000100100001,10001000010001,10010000001001,10100000000101,11000000000011,100000000000001,100000010000001,100000101000001,100001000100001,100010000010001,100100000001001,101000000000101,110000000000011,1000000000000001,1000000110000001,1000001001000001,1000100000010001,1001000000001001,1010000000000101,1100000000000011".to_owned();
        let pals_vec = pals_str.split(",").collect::<Vec<&str>>();
        pals = Vec::new();
        for v in pals_vec {
            pals.push(u128::from_str(v).unwrap());
        }
    }else{
        pals = data.unwrap();
    }
    
    pals.print_bit_counts();
}